@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;400&display=swap');
:root {
    --white: #fff;
    --bg: #2d3040;
    --border: #67709f;
    --dark: #232631;

    --vuecolor: #00bc9b;
    --jscolor: #f7971e;
    --reactcolor: #eb3349;
}
* {
    margin: 0;
    padding: 0;

}

*,::before,::after {
    box-sizing: border-box;
}
body {
    font-family: 'Poppins';
   background-color: var(--bg);
}

.site {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
}
.box {
    width: 300px;
    height: 300px;
    padding: 2em;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1em;
    background: rgb(0 0 0 / 7%);
}

.box :where(.circle, svg) {
    position: relative;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    z-index: 10;
   
}
.box svg {
    transform: rotate(270deg);
}

.box svg circle {
    width: 100%;
    height: 100%;
    fill: none;
    /* stroke: red; */
    transform: translate(5px, 5px);
    stroke-width: 8px;
    stroke-linecap: round;
    stroke-dasharray: 596;
    stroke-dashoffset: calc(596 - (596 * 95) / 100);
    animation: fillline 2s linear forwards;
    animation-iteration-count: 1;
}

.box.js svg circle {

    stroke-dashoffset: calc(596 - (596 * 90) / 100);
 
}
.box.react svg circle {

    stroke-dashoffset: calc(596 - (596 * 80) / 100);
 
}

@keyframes fillline {
    from {
        stroke-dashoffset: 596;
    }
}
.box .circle .inside {
    position: absolute;
    width: calc(100% - 40px);
    height: calc(100% - 40px);
    top: 20px;
    left: 20px;
    background-color: var(--dark);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    

}

.box .circle .inside:before {
   content: '';
   position: absolute;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   border: 1px solid var(--border);
   border-radius: 50%;
   transform: scale(1.19);

}
.box .circle .inside span {
    font-size: 2.5em;
    font-weight: 200;
    background-image: linear-gradient(135deg, var(--bg), var(--border));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    opacity: 0;
    transform: scale(0.2) translateY(50px);
    animation: showup 1s 1s forwards;
    animation-iteration-count: 1;
}
@keyframes showup {
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}
.box .circle .inside .dot {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    opacity: 1;
    animation: dot 2s linear forwards;
    animation-iteration-count: 1;
}
@keyframes dot {
    from {
        transform: rotate(0);
        opacity: 0;
    }
}

.box .circle .inside .dot::before {
    content: '';
    position: absolute;
    width: 7px;
    height: 7px;
    border-radius: 50%;
    background-color: var(--vuecolor);
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
}
.box.vue .circle .inside .dot {
    transform: rotate(calc(3.6deg * 95));
}

.box.js .circle .inside .dot {
    transform: rotate(calc(3.6deg * 90));
}

.box.react .circle .inside .dot {
    transform: rotate(calc(3.6deg * 80));
}
.box.vue .circle .inside .dot::before {
    background-color: var(--vuecolor);
    box-shadow: 0 0 10px var(--vuecolor);
}


.box.js .circle .inside .dot::before {
    background-color: var(--jscolor);
    box-shadow: 0 0 10px var(--jscolor);
}


.box.react .circle .inside .dot::before {
    background-color: var(--reactcolor);
    box-shadow: 0 0 10px var(--reactcolor);
}
.box h4 {
    font-size: 1s.25em;
    font-weight: 200;
    color: white;
    text-align: center;

}
